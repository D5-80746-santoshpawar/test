
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class AccountDao implements AutoCloseable {
	private Connection con;

	public AccountDao() throws Exception {
		con = DbUtil.getConnection();
	}

	public void close() {
		try {
			if (con != null)
				con.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	//Account(int acc_no, String name, String email, String birthdate, Double balance, int acctype_id)

	Scanner sc = new Scanner(System.in);
	
	public int save(Account c) throws Exception {
		List<Account> list = new ArrayList<Account>();
		String sql = "INSERT INTO acc_holder_details VALUES(default, ?, ?, ?,?,?)"; // parameterized query
		try (PreparedStatement stmt = con.prepareStatement(sql)) {
//		System.out.print("Enter account Number: ");
//			int acc_no = sc.nextInt();
			System.out.print("Enter name: ");
			String name = sc.next();
			System.out.print("Enter email: ");
			String email = sc.next();
			System.out.print("Enter birthdate: ");
			String birthdate = sc.next();
			System.out.print("Enter balace: ");
			Double balance = sc.nextDouble();
			System.out.print("Enter account type: ");
			int acctype_id = sc.nextInt();

		//	stmt.setInt(1, c.getAcc_no());
			stmt.setString(1, c.getName());
			stmt.setString(2, c.getEmail());
			stmt.setString(3, c.getbirthdate());
			stmt.setDouble(4, c.getBalance());
			stmt.setInt(5, c.getAcctype_id());
			
			
			int count = stmt.executeUpdate();
			System.out.println("Rows Affected: " + count);
		}
		return 0;
		
	/*	int update(Account c) throws Exception {
			String sql = "UPDATE Accounts SET name=?, email=?, birthdate=?, balance=? acctype_id=? WHERE acc_no=?";
			try (PreparedStatement stmt = con.prepareStatement(sql)) {
				stmt.setInt(1,c.getAcc_no());
				stmt.setString(2, c.getName());
				stmt.setString(3, c.getEmail());
				stmt.setString(4, c.getbirthdate());
				stmt.setDouble(5, c.getBalance());
				int count = stmt.executeUpdate();
				stmt.setInt(1,c.getAcctype_id());
				return count;
			} // stmt.close();
		}

	
	
	
	
	

/*	public int save(Account c) throws Exception {
		List<Account> list = new ArrayList<Account>();
		String sql = "INSERT INTO Accounts VALUES(?, ?, ?, ?,?,?)"; // parameterized query
		try (PreparedStatement stmt = con.prepareStatement(sql)) {
			System.out.print("Enter account Number: ");
			int acc_no = sc.nextInt();
			System.out.print("Enter name: ");
			String name = sc.next();
			System.out.print("Enter email: ");
			String email = sc.next();
			System.out.print("Enter birthdate: ");
			String birthdate = sc.next();
			System.out.print("Enter balace: ");
			Double balance = sc.nextDouble();
			System.out.print("Enter account type: ");
			int acctype_id = sc.nextInt();
			
			stmt.setInt(1, c.getAcc_no());
			stmt.setString(2, c.getName());
			stmt.setString(3, c.getEmail());
			stmt.setString(4, c.getbirthdate());
			stmt.setDouble(5, c.getBalance());
			stmt.setInt(6, c.getAcctype_id());
			
			

			int count = stmt.executeUpdate();
			System.out.println("Rows Affected: " + count);
		}
		return 0;

	}

/*	

/*	

	
/*
	public Account findById(int id) {
	    // TODO: Lab assignment
	    String sql = "SELECT * FROM Accounts WHERE acc_no=?";
	    try (PreparedStatement stmt = con.prepareStatement(sql)) {
	        stmt.setInt(1, id);
	        ResultSet rs = stmt.executeQuery();
	        
	        if (rs.next()) {
	            // Retrieve Account data from the ResultSet and create a Account object
	            int AccountId = rs.getInt("id");
	            String name = rs.getString("name");
	            String email = rs.getString("birthdate");
	            Double ballance = rs.getInt("balance");
	            
	            
	            
	            
	            Account Account = new 
	            // Initialize other Account fields here
	            System.out.println("Account is "+ Account);
	            
	            return Account;
	        }
	    } catch (SQLException e) {
	        // Handle any SQL-related exceptions here
	        e.printStackTrace();
	    }
	    
	    return null; // Return null if the Account with the specified ID is not found
	}


/*	public Account findAll() {
		List<Account> list = new ArrayList<Account>();
		  String sql = "SELECT * FROM Accounts ";
		    try (PreparedStatement stmt = con.prepareStatement(sql)) {
		      
		        ResultSet rs = stmt.executeQuery();
		        
		        while (rs.next()) {
		            // Retrieve Account data from the ResultSet and create a Account object
		         
		        	int id = rs.getInt("id");
		            String name = rs.getString("name");
		            String email = rs.getString("email");
		            int ballance = rs.getInt("ballance");
		            
		            
		            
		            
		            Account Account = new Account(id,  name,  email,  ballance);
		            
		            System.out.println("Account is "+ Account);
		            
		          //  return Account;
		        }
		    } catch (SQLException e) {
		        // Handle any SQL-related exceptions here
		        e.printStackTrace();
		    }
			return null;
			
		
		// TODO: Lab assignment
	//	return list;
	} */

/*	public List<Account> findByemail(String email) throws Exception {
		List<Account> list = new ArrayList<Account>();
		String sql = "SELECT * FROM Accounts WHERE email=?";
		try (PreparedStatement stmt = con.prepareStatement(sql)) {
			stmt.setString(1, email);
			try (ResultSet rs = stmt.executeQuery()) {
				while (rs.next()) {
					int id2 = rs.getInt("id");
					String name = rs.getString("name");
					email = rs.getString("email");
					int  = rs.getInt("");
					Account c = new Account();
					list.add(c);
				}
			} // rs.close();
		} // stmt.close();
		return list;
	}  */
}

	public int update(Account c) throws Exception {
		String sql = "UPDATE Accounts SET name=?, email=?, birthdate=?, balance=? acctype_id=? WHERE acc_no=?";
		try (PreparedStatement stmt = con.prepareStatement(sql)) {
			stmt.setInt(1,c.getAcc_no());
			stmt.setString(2, c.getName());
			stmt.setString(3, c.getEmail());
			stmt.setString(4, c.getbirthdate());
			stmt.setDouble(5, c.getBalance());
			int count = stmt.executeUpdate();
			stmt.setInt(1,c.getAcctype_id());
			return count;
		} // stmt.close();
		
	
	}
}
